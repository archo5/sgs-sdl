
include "sgsimgui";

function ImGui_HSplit( at, left, right )
{
	(w,h) = ImGui_GetContentRegionAvail();
	if( ImGui_BeginChild( "hs:lft", w * at, h, true ) )
	{
		left();
	}
	ImGui_EndChild();
	ImGui_SameLine( w * at );
	if( ImGui_BeginChild( "hs:rgt", ImGui_GetContentRegionAvailWidth(), h, true ) )
	{
		right();
	}
	ImGui_EndChild();
}

function ImGui_HSplit3( spl12, spl23, left, mid, right )
{
	acc = 0;
	(w,h) = ImGui_GetContentRegionAvail();
	acc += toint( w * spl12 );
	if( ImGui_BeginChild( "hs:lft", w * spl12, h, true ) )
	{
		left();
	}
	ImGui_EndChild();
	ImGui_SameLine( acc );
	
	acc += toint( w * ( spl23 - spl12 ) );
	if( ImGui_BeginChild( "hs:mid", w * ( spl23 - spl12 ), h, true ) )
	{
		mid();
	}
	ImGui_EndChild();
	ImGui_SameLine( acc );
	
	if( ImGui_BeginChild( "hs:rgt", ImGui_GetContentRegionAvailWidth(), h, true ) )
	{
		right();
	}
	ImGui_EndChild();
}

function ImGui_MainWindow( w, h, cb )
{
	ImGui_PushStyleVarV2( ImGuiStyleVar_WindowPadding, 0, 0 );
	ImGui_PushStyleVarF( ImGuiStyleVar_WindowRounding, 0 );
	ImGui_SetNextWindowPos( 0, 0 );
	ImGui_SetNextWindowSize( w, h );
	if( ImGui_Begin( "main", null,
		ImGuiWindowFlags_NoTitleBar |
		ImGuiWindowFlags_NoResize |
		ImGuiWindowFlags_NoMove |
		ImGuiWindowFlags_MenuBar |
		ImGuiWindowFlags_NoBringToFrontOnFocus ) )
	{
		ImGui_PushStyleVarV2( ImGuiStyleVar_WindowPadding, 4, 4 );
		ImGui_PushStyleVarF( ImGuiStyleVar_WindowRounding, 4 );
		
		cb();
		
		ImGui_PopStyleVar( 2 );
	}
	ImGui_End();
	ImGui_PopStyleVar( 2 );
}

function configure()
{
}

function initialize()
{
	global Window = SS_CreateWindow( "SGS-SDL Game Framework", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 1024, 576, SDL_WINDOW_OPENGLMAYBE | SDL_WINDOW_RESIZABLE );
	Window.initRenderer( SS_RENDERER_DONTCARE, SS_RENDERER_VSYNC );
	global Font = SS_CreateFont( "fonts/lato-regular.ttf", 12 );
	SS_InitDrawFunctions();
	
	ImGui_SS_Init( Window.width, Window.height );
}

global lasttime = ftime();
global whichtest = 0;
function update()
{
	global whichtest;
	
	curtime = ftime();
	dt = curtime - lasttime;
	global lasttime = curtime;
	
	SS_Clear( color(0.1,0.2,0.4) );
	SS_SetCameraUI( 0, Window.width, 0, Window.height );
	
	ImGui_SS_NewFrame( dt );
	
	if( ImGui_IsKeyDown( SDL_SCANCODE_F1 ) ) whichtest = 0;
	if( ImGui_IsKeyDown( SDL_SCANCODE_F2 ) ) whichtest = 1;
	
	ImGui_Begin( "Info" );
	ImGui_Text( "F1 - basic test, F2 - editor layout test" );
	ImGui_End();
	
	if( whichtest == 0 )
	{
		ImGui_ShowTestWindow();
	}
	else if( whichtest == 1 )
	{
		ImGui_MainWindow( Window.width, Window.height, function()
		{
			ImGui_BeginMenuBar();
			if( ImGui_BeginMenu( "Editor" ) )
			{
				if( ImGui_MenuItem( "Quit" ) ) _G.whichtest = 0;
				ImGui_EndMenu();
			}
			ImGui_EndMenuBar();
			
			ImGui_HSplit3( 0.2, 0.8,
				function(){ ImGui_Text( "part 1" ); },
				function()
				{
					ImGui_Text( "part 2" );
					(x,y) = ImGui_GetCursorScreenPos();
					ImDrawList_AddCallback(function() use(x,y)
					{
						SS_DrawColorCircle( x + 32, y + 48, 24, 12, 1, 0, 0, 0.5 );
						SS_DrawTextLine_VC( "custom", Font, x + 16, y + 48, color(1,1,1) );
					});
					ImDrawList_AddCircle( x + 32, y + 48, 32, ImGui_GetColorU32( 1, 1, 1, 0.5 ), 32, 5 );
				},
				function(){ ImGui_Text( "part 3" ); } );
		});
	}
	
	ImGui_Render();
	
	SS_Present();
}

function on_event( e )
{
	if( e.type == SDL_QUIT )
		global sys_exit = true;
	ImGui_SS_Event( e );
}

function cleanup()
{
}
