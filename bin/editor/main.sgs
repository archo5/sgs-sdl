
include_file( "engine/all.sgs" );
include_file( "editor/system.sgs" );


global ED_msg_alpha = 0, ED_msg_text = "";
function ED_message( msg )
{
	global ED_msg_text = msg,
	       ED_msg_alpha = 1;
}


function ED_stateToUI()
{
	items = UITopMenu.children[ 1 ].items;
	foreach( item : items )
		item.icon = null;
	items[ ED.mode ].icon = true;
	UITopMenu.children[ 2 ].items[ 0 ].icon = ED.show_grid;
}

function ED_resetAll()
{
	global ED = ED_createState();
	ED_stateToUI();
}
function ED_setMode( mode )
{
	ED.mode = mode;
	ED_stateToUI();
}
function ED_toggleViewGrid()
{
	ED.show_grid = !ED.show_grid;
	ED_stateToUI();
}


function topmenu_file_new()
{
	cb = function( res ){ if( res ) ED_resetAll(); };
	UIDialog.createQuestion( UI, "Do you really want to clear everything?", cb );
}
function topmenu_file_quit()
{
	if( ED.modified )
	{
		function cb( res )
		{
			if( res == 1 )
				println( "Saving..." );
			else if( res === 0 )
				global sys_exit = true;
		}
		UIDialog.createQuestion( UI, "You have unsaved changes. Do you want to save?", cb, true );
	}
	else
	{
		global sys_exit = true;
	}
}


function configure()
{
}

function initialize()
{
	set_caption( "Level Editor" );
	set_video_mode( 1024, 576, 32, "resizable" );

	global lasttime = ftime();

	ED_initialize();

	ED_createObject( "misc", 32, 32 );
	ED_createObject( "player", 64, 32 );
	ED_createObject( "metadata", 128, 32 );
	
	global UITopMenu, UI = UIFrame.create( 1024, 576 );
	
	UI.addChild( UITopMenu = UIControl.createMenu() );

	// FILE //
	mi_file = UIControl.createDropMenu();
	mi_file.items.push( UICreateMenuItem( "New", topmenu_file_new ) );
	mi_file.items.push( UICreateMenuItem( "Open" ) );
	mi_file.items.push( UICreateMenuItem() );
	mi_file.items.push( UICreateMenuItem( "Quit", topmenu_file_quit ) );
	UITopMenu.addItem( UICreateMenuItem( "File", mi_file ) );

	// MODE //
	mi_mode = UIControl.createDropMenu();
	mi_mode.items.push( UICreateMenuItem( "View", function(){ ED_setMode( EM_VIEW ); }, true ) );
	mi_mode.items.push( UICreateMenuItem( "Put", function(){ ED_setMode( EM_PUT ); } ) );
	mi_mode.items.push( UICreateMenuItem( "Paint", function(){ ED_setMode( EM_PAINT ); } ) );
	UITopMenu.addItem( UICreateMenuItem( "Mode", mi_mode ) );

	// VIEW //
	mi_view = UIControl.createDropMenu();
	mi_view.items.push( UICreateMenuItem( "Grid", function(){ ED_toggleViewGrid(); }, true ) );
	UITopMenu.addItem( UICreateMenuItem( "View", mi_view ) );

	UITopMenu.recalcLayout();

	// test ... //
	/*
	global UIDropMenu = UIControl.createDropMenu();
	UI.addChild( UIDropMenu );
	UIDropMenu.items.push( UICreateMenuItem( "Something" ) );
	UIDropMenu.items.push( UICreateMenuItem( "Something else" ) );
	UIDropMenu.items.push( UICreateMenuItem() );
	UIDropMenu.items.push( UICreateMenuItem( "Something before inv" ) );
	ii = UICreateMenuItem( "Invisible" ); ii.visible = false; UIDropMenu.items.push( ii );
	UIDropMenu.items[1].onclick = function(){ println( "Whoa" ); };
	UIDropMenu.items.push( UICreateMenuItem( "Something after inv" ) );

	UI.onclick = closure( function( x, y, bid )
		{ if( bid == 3 ) UIDropMenu.open(x,y); this( x, y, bid ); }
		, UI.onclick );
	*/
}

function update()
{
	global lasttime, ED_msg_alpha, ED_msg_text;
	var curtime = ftime();
	var delta = curtime - lasttime;
	if( delta > 1.0/15.0 )
		delta = 1.0/15.0;
	lasttime = curtime;

	var cc = [0.1,0.2,0.4];
	clear( cc );

	ED_draw();

	UI.draw();
	if( ED_msg_alpha > 0 )
	{
		draw_text_rect( ED_msg_text, UI.font, [0.9, ED_msg_alpha], DT_LEFT | DT_BOTTOM, 4, UI.w - 4, 4, UI.h - 4 );
		ED_msg_alpha -= delta / 3;
	}
	
	present();

	sleeptime = 15 - delta * 1000;
	if( sleeptime > 0 ) sleep( sleeptime );
}

function on_event( e )
{
	if( e.type == SDL_QUIT || ( e.type == SDL_KEYDOWN && e.keycode == SDLK_F4 && e.mod & KMOD_ALT ) )
		global sys_exit = true;

	ED_event( e );
	UI.event( e );
}

function cleanup()
{
}
