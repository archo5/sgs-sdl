
#ifdef VS

float4x4 mWorldView : register(c4);
float4x4 mProj : register(c12);

void main
(
	float4 ipos : POSITION0,
	float3 inrm : NORMAL0,
	float4 icol : COLOR0,
	float2 itex : TEXCOORD0,
	out float4 opos : POSITION0,
	out float4 otfpos : TEXCOORD1,
	out float4 oT : TEXCOORD2,
	out float3 oN : TEXCOORD3,
	out float4 ocol : COLOR0,
	out float2 otex : TEXCOORD0
)
{
	float4 viewPos = mul( mWorldView, ipos );
	opos = mul( mProj, viewPos );
	otfpos = viewPos;
	oT = float4( mul( mWorldView, float4( 1, 0, 0, 0 ) ).xyz, 1 );
	oN = mul( mWorldView, float4( inrm, 0 ) ).xyz;
	ocol = icol;
	otex = itex;
}

#elif defined(PS)

sampler2D Tex0 : register(s0);
sampler2D Tex1 : register(s1);
samplerCUBE Tex7 : register(s7);

float4x4 mInvView : register(c12);

half3 encodeN( half3 n )
{
	return n * 0.5 + 0.5;
}

void main
(
	float4 itfpos : TEXCOORD1,
	float4 iT : TEXCOORD2,
	float3 iN : TEXCOORD3,
	float4 icol : COLOR0,
	float2 itex : TEXCOORD0,
	out float4 ocol0 : COLOR0,
	out float4 ocol1 : COLOR1,
	out float4 ocol2 : COLOR2
)
{
	float3 col = tex2D( Tex0, itex ).rgb * icol.rgb;
	float3 nrm = tex2D( Tex1, itex ).rgb * 2 - 1;
	ocol0 = float4( col, itfpos.z );
	
	float3 T = iT.xyz;
	float3 B = cross( iN, iT.xyz ) * iT.w;
	float3 N = iN;
	
	float3 Normal = nrm.x * T + nrm.y * B + nrm.z * N;
	float3 refView = reflect( -normalize( itfpos ), Normal );
	float3 refWorld = mul( mInvView, float4( refView, 0 ) ).xyz;
	
	ocol1 = float4( encodeN( Normal ), 0 );
	ocol2 = float4( texCUBElod( Tex7, float4( refWorld.xzy*float3(1,-1,1), 1 ) ).rgb * 0.5, 0 );
}

#endif

